import { Button } from "@/components/ui/button";
import {
  Code,
  Code2Icon,
  Download,
  Monitor,
  SquareArrowOutUpRight,
  TabletSmartphone,
  View,
} from "lucide-react";
import React, { useEffect, useState } from "react";
import ViewCodeBlock from "./ViewCodeBlock";
import { set } from "react-hook-form";

const HTML_CODE = `  <!DOCTYPE html>
      <html lang="en">
        <head>
          <meta charset="UTF-8" />
          <meta name="viewport" content="width=device-width, initial-scale=1.0" />
          <meta name="description" content="Generated by AI Website Generator" />
          <title>AI Website Generator</title>
          <!-- Tailwind CSS CDN -->
          <script src="https://cdn.tailwindcss.com"></script>

          <!-- Flowbite CSS CDN -->
          <link
            href="https://cdnjs.cloudflare.com/ajax/libs/flowbite/2.3.0/flowbite.min.css"
            rel="stylesheet"
          />
          <script src="https://cdnjs.cloudflare.com/ajax/libs/flowbite/2.3.0/flowbite.min.js"></script>

          <!-- Font Awesome CDN -->
          <link
            rel="stylesheet"
            href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.2/css/all.min.css" integrity="sha512-SnH5t/1uO4eqvEF7N6Z4+Yf3f+gKp3rGkU2N0X8sV2d9aVqgPNO8+zJ6F8e5w5pX5Z5c5m5b5m5b5m5b5m5b5mA==" crossorigin="anonymous" referrerpolicy="no-referrer" crossorigin="anonymous" referrerpolicy="no-referrer"
          />

          <!-- Chart.js CDN for charts & graphs -->
          <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

          <!-- AOS CDN for animations -->
          <link
            href="https://cdnjs.cloudflare.com/ajax/libs/aos/2.3.4/aos.css" 
            rel="stylesheet"
          />
          <script src="https://cdnjs.cloudflare.com/ajax/libs/aos/2.3.4/aos.js"></script>

          <!-- Gsap CDN for advanced animations -->
          <script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.12.2/gsap.min.js"></script>

          <!-- Lottie CDN for Lottie animations -->
          <script src="https://cdnjs.cloudflare.com/ajax/libs/lottie-web/5.10.2/lottie.min.js"></script>

          <!-- Swiper CDN for sliders -->
          <link
            rel="stylesheet"
            href="https://cdnjs.cloudflare.com/ajax/libs/Swiper/8.4.5/swiper-bundle.min.css"
          />
          <script src="https://cdnjs.cloudflare.com/ajax/libs/Swiper/8.4.5/swiper-bundle.min.js"></script>

          <!-- Optional: Tooltip & Popover library (Tippy.js) -->
          <link
            rel="stylesheet"
            href="https://unpkg.com/tippy.js@6/dist/tippy.css"
          />
          <script src="https://unpkg.com/@popperjs/core@2"></script>
          <script src="https://unpkg.com/tippy.js@6/dist/tippy.umd.min.js"></script>
        </head>
        <body id="root">{code}</body> 
      </html>`;

const WebPageTools = ({
  selectedScreenSize,
  setSelectedScreenSize,
  generatedCode,
}: any) => {
  const [finalCode, setFinalCode] = useState<string>();

  useEffect(() => {
    const cleanCode = (HTML_CODE.replace("{code}", generatedCode) || "")
      .replaceAll("```html", "")
      .replace("```", "")
      .replaceAll("html", "");
    setFinalCode(cleanCode);

    return () => {};
  }, [generatedCode]);

  const ViewInNewTab = () => {
    if (!finalCode) return;

    const blob = new Blob([finalCode ?? ""], { type: "text/html" });
    const url = URL.createObjectURL(blob);

    window.open(url, "_blank");
  };

  // Download code
  const DownloadCode = () => {
    if (!finalCode) return;
    const blob = new Blob([finalCode ?? ""], { type: "text/html" });
    const url = URL.createObjectURL(blob);
    const a = document.createElement("a");
    a.href = url;
    a.download = "website.html";
    document.body.appendChild(a);
    a.click();
    document.body.removeChild(a);
    URL.revokeObjectURL(url);
  };

  return (
    <div className="flex items-center justify-between p-2 shadow rounded-2xl w-full">
      <div className="flex gap-2">
        <Button
          variant="outline"
          onClick={() => setSelectedScreenSize("web")}
          className={`${
            selectedScreenSize == "web" ? "border border-primary" : null
          }`}
        >
          <Monitor />
        </Button>
        <Button
          variant="outline"
          onClick={() => setSelectedScreenSize("mobile")}
          className={`${
            selectedScreenSize == "mobile" ? "border border-primary" : null
          }`}
        >
          <TabletSmartphone />
        </Button>
      </div>

      <div className="flex gap-2">
        <Button variant={"outline"} onClick={() => ViewInNewTab()}>
          View
          <SquareArrowOutUpRight />
        </Button>

        {/* View Code Button */}
        <ViewCodeBlock code={finalCode}>
          <Button>
            View <Code2Icon />
          </Button>
        </ViewCodeBlock>

        {/* Download Button */}
        <Button onClick={DownloadCode}>
          Download <Download />
        </Button>
      </div>
    </div>
  );
};

export default WebPageTools;
